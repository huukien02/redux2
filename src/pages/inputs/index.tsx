import { DatePicker, LocalizationProvider } from "@mui/lab";
import {
  Box,
  TextField,
  Button,
  InputLabel,
  MenuItem,
  FormControl,
  FormHelperText,
  Input,
  Autocomplete,
  Typography,
} from "@mui/material";
import { TextFieldProps } from "@mui/material/TextField";
import Head from "next/head";
import React, { useState } from "react";

import styles from "./styles.module.scss";

function Inputs() {
  const [name, setName] = useState("");
  const [selectItem, setSelectItem] = useState("");

  /* Autocomplete */
  const [valueMovie, setValueMovie] = useState("");
  const Movies = ["Movie 1", "Movie 2", "Movie 3", "Movie 4"];
  /* Autocomplete */

  const [valueSearch, setValueSearch] = useState("");
  const listSearch = [
    { name: "Kien", age: 20 },
    { name: "Nhu", age: 20 },
    { name: "Anh", age: 21 },
    { name: "Tu", age: 22 },
    { name: "Tuan", age: 20 },
    { name: "Tai", age: 23 },
    { name: "Giang", age: 21 },
  ];

  return (
    <div className={styles["container"]}>
      <Head>
        <title>Input</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>

      <Box className={styles["list-input"]}>
        <Box className={styles["item"]}>
          <TextField
            label="Enter name"
            value={name}
            onChange={(e) => {
              setName(e.target.value);
            }}
          />
          <Typography variant="body1" color="initial">
            Value: <b>{name}</b>
          </Typography>
        </Box>

        <hr />

        <Box
          className={styles["item"]}
          component="form"
          sx={{
            "& .MuiTextField-root": { m: 1, width: "25ch" },
          }}
          noValidate
          autoComplete="off"
        >
          <div>
            <TextField
              select
              label="Select"
              helperText="Please select Item"
              onChange={(e) => setSelectItem(e.target.value)}
            >
              <MenuItem value={"Item 1"}>Item 1</MenuItem>
              <MenuItem value={"Item 2"}>Item 2</MenuItem>
              <MenuItem value={"Item 3"}>Item 3</MenuItem>
              <MenuItem value={"Item 4"}>Item 4</MenuItem>
            </TextField>
          </div>
          <Typography variant="body1" color="initial">
            Value: <b>{selectItem}</b>
          </Typography>
        </Box>

        <hr />

        {/* ------------- Autocomplete ------------- */}
        <Box className={styles["item"]}>
          <Autocomplete
            inputValue={valueMovie}
            onInputChange={(e, value) => setValueMovie(value)}
            options={Movies}
            sx={{ width: 300 }}
            renderInput={(params) => (
              <TextField {...params} label="Seclect Movie" />
            )}
          />
          <Typography variant="body1" color="initial">
            Value: <b>{valueMovie}</b>
          </Typography>
        </Box>
        {/* ---------------------------------------- */}

        <hr />
        {/* ------------- Search ------------- */}
        <Box className={styles["item"]}>
          <Autocomplete
            id="free-solo-demo"
            freeSolo
            onInputChange={(e, value) => setValueSearch(value)}
            sx={{ width: 300 }}
            options={listSearch.map((item: { name: any }) => item.name)}
            renderInput={(params) => (
              <TextField {...params} label="Search name" />
            )}
          />
          <Typography variant="body1" color="initial">
            Value: <b>{valueSearch}</b>
          </Typography>
        </Box>
        {/* ---------------------------------- */}
        <hr />
        <Box className={styles["item"]}>
          <Autocomplete
            multiple
            limitTags={2}
            id="multiple-limit-tags"
            options={listSearch}
            getOptionLabel={(option) => option.name}
            defaultValue={[listSearch[0]]}
            renderInput={(params) => (
              <TextField
                {...params}
                label="limitTags"
                placeholder="Favorites"
              />
            )}
            sx={{ width: "500px" }}
          />
        </Box>
      </Box>
    </div>
  );
}

export default Inputs;
