import {
  Box,
  Button,
  Typography,
  ButtonGroup,
  IconButton,
} from "@mui/material";
import Head from "next/head";
import React from "react";

import DeleteIcon from "@mui/icons-material/Delete";
import SendIcon from "@mui/icons-material/Send";
import AlarmIcon from "@mui/icons-material/Alarm";
import SaveIcon from "@mui/icons-material/Save";
import AddShoppingCartIcon from "@mui/icons-material/AddShoppingCart";

import { ErrorRounded } from "@mui/icons-material";

import LoadingButton from "@mui/lab/LoadingButton";
import Rating from "@mui/material/Rating";

import styles from "./styles.module.scss";

function Buttons() {
  const [star, setStart] = React.useState<number | null>(1);
  const [hoverStar, setHoverStart] = React.useState(-1);
  const labels: { [index: string]: string } = {
    1: "Useless",
    2: "Poor",
    3: "Ok",
    4: "Good",
    5: "Excellent",
  };
  return (
    <div className={styles["container"]}>
      <Head>
        <title>Button</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>
      <Box>
        <Typography variant="h4" color="initial" align="center">
          Button
        </Typography>
      </Box>

      <Box mt={5} className={styles["list-btn"]}>
        <Button variant="outlined" startIcon={<DeleteIcon />}>
          Delete
        </Button>
        <Button variant="contained" endIcon={<SendIcon />}>
          Send
        </Button>
        <Button variant="contained" color="error" startIcon={<ErrorRounded />}>
          Error
        </Button>
        <Button variant="contained" color="warning">
          Warning
        </Button>
        <Button variant="contained" color="success">
          Info
        </Button>
        <Button variant="contained" color="secondary">
          Secondary
        </Button>
      </Box>

      <ButtonGroup
        className={styles["btn-group-row"]}
        variant="contained"
        color="success"
        size="small"
        aria-label=""
      >
        <Button>Send</Button>
        <Button>Send</Button>
        <Button>Send</Button>
      </ButtonGroup>

      <ButtonGroup
        className={styles["btn-group-column"]}
        orientation="vertical"
        variant="contained"
        color="warning"
        size="small"
        aria-label=""
      >
        <Button>Warning</Button>
        <Button>Warning</Button>
        <Button>Warning</Button>
      </ButtonGroup>

      <ButtonGroup>
        <IconButton color="secondary">
          <AlarmIcon />
        </IconButton>

        <IconButton color="primary">
          <AddShoppingCartIcon />
        </IconButton>
      </ButtonGroup>

      <Box className={styles["btn-loading"]}>
        <LoadingButton loading variant="outlined">
          Submit
        </LoadingButton>
        <LoadingButton loading loadingIndicator="Loadingâ€¦" variant="outlined">
          Fetch data
        </LoadingButton>
        <LoadingButton
          loading
          loadingPosition="start"
          startIcon={<SaveIcon />}
          variant="outlined"
        >
          Save
        </LoadingButton>
      </Box>

      <Box className={styles["btn-rating"]}>
        <Typography variant="h6">Rating</Typography>
        <Rating
          name="simple-controlled"
          value={star}
          onChange={(event, value) => {
            setStart(value);
          }}
          onChangeActive={(event, value) => {
            setHoverStart(value);
          }}
        />
        {star !== null && (
          <Box>{labels[hoverStar !== -1 ? hoverStar : star]}</Box>
        )}
      </Box>
    </div>
  );
}

export default Buttons;
