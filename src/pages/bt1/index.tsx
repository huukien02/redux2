import {
  Box,
  Button,
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TextField,
} from "@mui/material";
import { DateField, LocalizationProvider } from "@mui/x-date-pickers";
import Head from "next/head";
import React, { useState } from "react";

function Bt2() {
  const [code, setCode] = useState("");
  const [name, setName] = useState("");
  const [date, setDate] = useState("");
  const [image, setImage] = useState("");
  const [listSV, setListSv] = useState<any[]>([]);
  const [idUpdate, setIdUpdate] = useState(Number);
  const [show, setShow] = useState(true);

  const handleValueInput = (e: any, type: string) => {
    if (type == "code") {
      setCode(e.target.value);
    } else if (type == "name") {
      setName(e.target.value);
    } else if (type == "date") {
      setDate(e.target.value);
    } else {
      setImage(e.target.value);
    }
  };

  const handleButton = (e: any, type: string) => {
    if (type == "add") {
      const obj = { code, name, date, image };
      setListSv((oldArray) => [...oldArray, obj]);

      setCode("");
      setName("");
      setDate("");
    }

    if (type == "update") {
      let newArray = listSV.filter((item, index) => {
        if (index == idUpdate) {
          item.name = name;
          item.code = code;
          item.date = date;
        }
      });
      setListSv(newArray);
      setShow(true);
    }
  };

  const handleDelete = (indexDel: number) => {
    let newList = listSV.filter((item, index) => index !== indexDel);
    setListSv(newList);
  };

  const handleUpdate = (item: any, index: number) => {
    setCode(item.code);
    setName(item.name);
    setDate(item.date);
    setIdUpdate(index);
    setShow(false);
  };

  return (
    <>
      <Head>
        <title>CRUD</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>
      <Box>
        <Box sx={{ marginTop: "20px" }}>
          <TextField
            value={code}
            id="outlined-password-input"
            label="Mã sinh viên"
            onChange={(e) => {
              handleValueInput(e, "code");
            }}
          />
        </Box>

        <Box sx={{ marginTop: "20px" }}>
          <TextField
            value={name}
            id="outlined-password-input"
            label="Họ tên"
            onChange={(e) => {
              handleValueInput(e, "name");
            }}
          />
        </Box>

        <Box sx={{ marginTop: "20px" }}>
          <TextField
            value={date}
            type={"date"}
            id="outlined-password-input"
            // label="Ngày sinh"
            onChange={(e) => {
              handleValueInput(e, "date");
            }}
          />
        </Box>

        <Box sx={{ marginTop: "20px" }}>
          {show ? (
            <Button
              onClick={(e) => {
                handleButton(e, "add");
              }}
              variant="contained"
              color="primary"
            >
              ADD
            </Button>
          ) : (
            <Button
              onClick={(e) => {
                handleButton(e, "update");
              }}
              variant="contained"
              color="primary"
            >
              UPDATE
            </Button>
          )}
        </Box>
      </Box>

      <TableContainer sx={{ marginTop: "20px" }} component={Paper}>
        <Table sx={{ minWidth: 650 }} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell>STT</TableCell>
              <TableCell align="right">Mã Sinh Viên</TableCell>
              <TableCell align="right">Họ Tên&nbsp;</TableCell>
              <TableCell align="right">Ngày Sinh&nbsp;</TableCell>
              <TableCell align="right">Action&nbsp;</TableCell>
            </TableRow>
          </TableHead>

          <TableBody>
            {listSV.map((item, index) => (
              <TableRow
                key={item.name}
                sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
              >
                <TableCell component="th" scope="row">
                  {index + 1}
                </TableCell>
                <TableCell align="right">{item.code}</TableCell>
                <TableCell align="right">{item.name}</TableCell>
                <TableCell align="right">{item.date}</TableCell>
                <TableCell align="right">
                  <Button
                    onClick={() => {
                      handleDelete(index);
                    }}
                    variant="text"
                    color="error"
                  >
                    Delete
                  </Button>
                  <Button
                    onClick={() => {
                      handleUpdate(item, index);
                    }}
                    variant="text"
                    color="info"
                  >
                    Update
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </>
  );
}

export default Bt2;
